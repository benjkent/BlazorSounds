@page "/dualplayer"
@inject HttpClient Http

<h1>Playlist</h1>

<p>Playing a specific song from a list of available songs</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="col-md-12 mb-4">
        <button type="button" class="btn btn-dark px-lg-3">
            
        </button>
        <button type="button" class="btn btn-dark px-lg-3"><span class="oi oi-media-pause" title="media-pause" aria-hidden="true"></span></button>
        <button type="button" class="btn btn-dark px-lg-3"><span class="oi oi-loop-circular" title="loop-circular" aria-hidden="true"></span></button>
    </div>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
